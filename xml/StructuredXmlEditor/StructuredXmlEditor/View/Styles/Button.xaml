<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:StructuredXmlEditor.View">

	<ResourceDictionary.MergedDictionaries>
		<local:SharedResourceDictionary
			Source="Brushes.xaml" />
		<local:SharedResourceDictionary
			Source="GeneralStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style
		x:Key="BaseButtonStyle"
		BasedOn="{StaticResource BaseElementStyle}"
		TargetType="{x:Type ButtonBase}">
		<Setter
			Property="SnapsToDevicePixels"
			Value="true" />
		<Setter
			Property="OverridesDefaultStyle"
			Value="true" />
		<Setter
			Property="MinHeight"
			Value="10" />
		<Setter
			Property="MinWidth"
			Value="10" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="Padding"
			Value="2" />

		<Setter
			Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle
									Margin="2"
									StrokeThickness="1"
									Stroke="{StaticResource BackgroundDarkBrush}"
									StrokeDashArray="1 2"
									SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="Border"
						CornerRadius="0"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							RecognizesAccessKey="True" />
					</Border>

					<ControlTemplate.Triggers>
						<Trigger
							Property="Button.IsDefaulted"
							Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderLightBrush}" />
						</Trigger>
						<Trigger
							Property="IsMouseOver"
							Value="true">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{StaticResource MouseOverBackgroundBrush}" />
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource MouseOverBorderBrush}" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="true">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{StaticResource BackgroundDarkBrush}" />
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderDarkBrush}" />
						</Trigger>
						<Trigger
							Property="ToggleButton.IsChecked"
							Value="true">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{StaticResource BackgroundDarkBrush}" />
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderDarkBrush}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Opacity"
								Value="0.6" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Type ToggleButton}"
		BasedOn="{StaticResource BaseElementStyle}"
		TargetType="{x:Type ToggleButton}">
		<Setter
			Property="SnapsToDevicePixels"
			Value="true" />
		<Setter
			Property="OverridesDefaultStyle"
			Value="true" />
		<Setter
			Property="MinHeight"
			Value="10" />
		<Setter
			Property="MinWidth"
			Value="10" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Center" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Center" />
		<Setter
			Property="Padding"
			Value="2" />

		<Setter
			Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter
						Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle
									Margin="2"
									StrokeThickness="1"
									Stroke="{StaticResource BackgroundDarkBrush}"
									StrokeDashArray="1 2"
									SnapsToDevicePixels="true" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="Border"
						CornerRadius="0"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							RecognizesAccessKey="True" />
					</Border>

					<ControlTemplate.Triggers>
						<Trigger
							Property="Button.IsDefaulted"
							Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderLightBrush}" />
						</Trigger>
						<Trigger
							Property="IsMouseOver"
							Value="true">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{StaticResource MouseOverBackgroundBrush}" />
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource MouseOverBorderBrush}" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="true">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{StaticResource BackgroundDarkBrush}" />
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderDarkBrush}" />
						</Trigger>
						<Trigger
							Property="ToggleButton.IsChecked"
							Value="true">
							<Setter
								TargetName="Border"
								Property="Background"
								Value="{StaticResource BackgroundDarkBrush}" />
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource SelectionBorderBrush}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Opacity"
								Value="0.6" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="EmptyToggleButtonStyle"
		BasedOn="{StaticResource BaseElementStyle}"
		TargetType="{x:Type ToggleButton}">
		<Setter
			Property="SnapsToDevicePixels"
			Value="true" />
		<Setter
			Property="OverridesDefaultStyle"
			Value="true" />
		<Setter
			Property="MinHeight"
			Value="10" />
		<Setter
			Property="MinWidth"
			Value="10" />
		<Setter
			Property="HorizontalContentAlignment"
			Value="Stretch" />
		<Setter
			Property="VerticalContentAlignment"
			Value="Stretch" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="Border"
						CornerRadius="0"
						Padding="{TemplateBinding Padding}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							RecognizesAccessKey="True" />
					</Border>

					<ControlTemplate.Triggers>
						<Trigger
							Property="Button.IsDefaulted"
							Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderLightBrush}" />
						</Trigger>
						<Trigger
							Property="IsMouseOver"
							Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource MouseOverBorderBrush}" />
						</Trigger>
						<Trigger
							Property="IsPressed"
							Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderDarkBrush}" />
						</Trigger>
						<Trigger
							Property="ToggleButton.IsChecked"
							Value="true">
							<Setter
								TargetName="Border"
								Property="BorderBrush"
								Value="{StaticResource BorderDarkBrush}" />
						</Trigger>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Opacity"
								Value="0.6" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Type Button}"
		BasedOn="{StaticResource BaseButtonStyle}"
		TargetType="{x:Type Button}">
	</Style>
</ResourceDictionary>